<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Global AQI Dashboard (Frutiger Aero)</title>

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

  <style>
    /* üåå Background with dreamy dark gradient */
    body {
      background: 
        linear-gradient(135deg, rgba(10, 10, 20, 0.85), rgba(40, 50, 70, 0.65)),
        url("https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=1950&q=80");
      background-size: cover;
      background-position: center;
      background-attachment: fixed;
      color: #fff;
      font-family: 'Segoe UI', sans-serif;
      overflow-x: hidden;
      min-height: 100vh;
      position: relative;
    }

    /* ‚òÅÔ∏è Moving Clouds Overlay */
    .clouds {
      position: fixed;
      top: 0;
      left: 0;
      width: 300%;
      height: 200%;
      background: url("https://www.transparenttextures.com/patterns/clouds.png");
      background-size: 800px 800px;
      opacity: 0.2;
      animation: drift 180s linear infinite;
      pointer-events: none;
      z-index: 1;
    }
    @keyframes drift {
      from { transform: translateX(0); }
      to { transform: translateX(-33%); }
    }

    /* üå•Ô∏è Static SVG clouds horizon */
    .svg-clouds {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      opacity: 0.3;
      z-index: 2;
      pointer-events: none;
    }

    /* Bring content above overlays */
    .container {
      position: relative;
      z-index: 3;
    }

    h2, h4, h3 { 
      text-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
    }

    #aqiMap {
      width: 100%;
      height: 60vh;
      border-radius: 20px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.25);
    }

    /* Glassmorphic AQI Cards */
    .aero-card {
      border-radius: 20px;
      backdrop-filter: blur(18px);
      background: rgba(255, 255, 255, 0.25);
      padding: 20px;
      text-align: center;
      transition: transform 0.3s ease, box-shadow 0.4s ease;
      color: #fdfdfd;
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }
    .aero-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 35px rgba(0, 0, 0, 0.2);
    }
    .aero-card i {
      font-size: 2.3rem;
      margin-bottom: 10px;
      text-shadow: 0 2px 6px rgba(255,255,255,0.6);
    }

    /* Pastel gradients per card */
    #card-aqi { background: linear-gradient(145deg, rgba(135,206,250,0.35), rgba(173,216,230,0.35)); }
    #card-pm25 { background: linear-gradient(145deg, rgba(255,182,193,0.35), rgba(255,160,122,0.35)); }
    #card-pm10 { background: linear-gradient(145deg, rgba(152,251,152,0.35), rgba(144,238,144,0.35)); }
    #card-no2 { background: linear-gradient(145deg, rgba(255,218,185,0.35), rgba(255,165,0,0.35)); }
    #card-co { background: linear-gradient(145deg, rgba(221,160,221,0.35), rgba(238,130,238,0.35)); }

    .glass-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
      gap: 20px;
      margin-top: 30px;
    }

    .search-bar input {
      background: rgba(255,255,255,0.3);
      border: none;
      color: #fff;
      backdrop-filter: blur(10px);
    }
    .search-bar input::placeholder { color: #f0f0f0; }

    .map-section {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 25px;
      margin-top: 40px;
    }
    @media (max-width: 992px) {
      .map-section { grid-template-columns: 1fr; }
    }

    .leaderboard-card {
      background: rgba(255,255,255,0.25);
      backdrop-filter: blur(18px);
      border-radius: 20px;
      padding: 25px 30px;
      box-shadow: 0 8px 30px rgba(0,0,0,0.15);
      height: 60vh;
      overflow-y: auto;
    }
    .leaderboard-card h3 {
      font-weight: 600;
      text-align: center;
      margin-bottom: 20px;
      color: #fff;
    }
    .leaderboard-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: rgba(255,255,255,0.2);
      padding: 12px 15px;
      border-radius: 12px;
      margin-bottom: 12px;
      transition: 0.3s;
    }
    .leaderboard-item:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(255,255,255,0.25);
    }
    .leaderboard-item .rank-icon { font-size: 1.5rem; margin-right: 10px; }
    .leaderboard-item .city-name { font-weight: 600; font-size: 1rem; }
    .leaderboard-item .aqi-value { font-weight: 500; }
    .progress { height: 6px; margin-top: 5px; background: rgba(255,255,255,0.2); }
    .progress-bar { border-radius: 3px; }
    .danger .progress-bar { background-color: #ff6b81; }
    .moderate .progress-bar { background-color: #f9d71c; }
    .clean .progress-bar { background-color: #32ff7e; }
  </style>
</head>

<body>
  <!-- ‚òÅÔ∏è Moving cloud overlay -->
  <div class="clouds"></div>

  <!-- üå•Ô∏è Static horizon clouds -->
  <svg class="svg-clouds" viewBox="0 0 1440 320">
    <path fill="#ffffff" fill-opacity="1" d="M0,224L60,208C120,192,240,160,360,170.7C480,181,600,235,720,250.7C840,267,960,245,1080,234.7C1200,224,1320,224,1380,224L1440,224L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z"></path>
  </svg>

  <div class="container py-4">
    <h2 class="text-center mb-3"><i class="fas fa-globe"></i> Frutiger Aero AQI Dashboard</h2>

    <!-- Search -->
    <div class="search-bar d-flex justify-content-center gap-2">
      <input type="text" id="cityInput" class="form-control w-50" placeholder="Enter a city (e.g. Delhi)">
      <button id="searchBtn" class="btn btn-light"><i class="fas fa-search"></i> Search</button>
    </div>

    <h4 class="text-center mt-4"><i class="fas fa-city"></i> <span id="cityName">Delhi</span> Air Quality</h4>

    <!-- AQI Cards -->
    <div class="glass-grid">
      <div id="card-aqi" class="aero-card">
        <i class="fas fa-wind"></i>
        <h5>Air Quality Index</h5>
        <p id="aqiValue">Loading...</p>
      </div>
      <div id="card-pm25" class="aero-card">
        <i class="fas fa-smog"></i>
        <h5>PM2.5</h5>
        <p id="pm25">-- Œºg/m¬≥</p>
      </div>
      <div id="card-pm10" class="aero-card">
        <i class="fas fa-cloud"></i>
        <h5>PM10</h5>
        <p id="pm10">-- Œºg/m¬≥</p>
      </div>
      <div id="card-no2" class="aero-card">
        <i class="fas fa-industry"></i>
        <h5>NO‚ÇÇ</h5>
        <p id="no2">-- Œºg/m¬≥</p>
      </div>
      <div id="card-co" class="aero-card">
        <i class="fas fa-burn"></i>
        <h5>CO</h5>
        <p id="co">-- Œºg/m¬≥</p>
      </div>
    </div>

    <!-- Map + Leaderboard -->
    <div class="map-section">
      <div class="leaderboard-card">
        <h3><i class="fas fa-trophy"></i> AQI Leaderboard</h3>
        <div id="loadingText" class="text-center mb-3">Loading cities...</div>
        <div id="leaderboard"></div>
      </div>
      <div id="aqiMap"></div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

  <script>
    const API_KEY = "2f56c48aff4ee1bff3b0c22fcfd7e488";
    const cities = ["Delhi", "Mumbai", "Kolkata", "Bangalore", "Chennai", "London", "New York", "Tokyo", "Paris", "Sydney", "Beijing", "Dubai", "Singapore"];
    const aqiLabels = ['Good','Fair','Moderate','Poor','Very Poor'];
    const aqiColors = ['clean','clean','moderate','danger','danger'];

    let map = L.map('aqiMap').setView([28.6139, 77.2090], 3);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

    async function fetchCityCoordinates(city) {
      const res = await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`);
      const data = await res.json();
      return { lat: data[0].lat, lon: data[0].lon, name: data[0].name };
    }

    async function fetchAQI(lat, lon, name) {
      const res = await fetch(`https://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${API_KEY}`);
      const data = await res.json();
      const aqi = data.list[0].main.aqi;
      return { name, aqi, lat, lon };
    }

    async function generateLeaderboard() {
      const results = [];
      for (let city of cities) {
        try {
          const { lat, lon, name } = await fetchCityCoordinates(city);
          const data = await fetchAQI(lat, lon, name);
          results.push(data);
          await new Promise(r => setTimeout(r, 200));
        } catch {}
      }
      document.getElementById("loadingText").style.display = "none";

      const sorted = results.sort((a,b)=>b.aqi - a.aqi);
      const container = document.getElementById("leaderboard");
      container.innerHTML = "";

      sorted.forEach((c, i) => {
        const category = aqiColors[c.aqi-1];
        const percent = (c.aqi / 5) * 100;
        const icon = i < 3 ? "fa-trophy" : "fa-medal";
        const item = document.createElement("div");
        item.className = `leaderboard-item ${category}`;
        item.innerHTML = `
          <div class="d-flex align-items-center">
            <i class="fas ${icon} rank-icon"></i>
            <span class="city-name">${c.name}</span>
          </div>
          <div class="text-end">
            <div class="aqi-value">${c.aqi} - ${aqiLabels[c.aqi-1]}</div>
            <div class="progress">
              <div class="progress-bar" style="width:${percent}%"></div>
            </div>
          </div>`;
        container.appendChild(item);

        const color = category === 'danger' ? 'red' : category === 'moderate' ? 'yellow' : 'green';
        const iconMarker = new L.Icon({
          iconUrl: `https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-${color}.png`,
          shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
          iconSize: [25, 41],
          iconAnchor: [12, 41]
        });
        L.marker([c.lat, c.lon], { icon: iconMarker }).addTo(map)
          .bindPopup(`<b>${c.name}</b><br>AQI: ${c.aqi} (${aqiLabels[c.aqi-1]})`);
      });
    }

    document.getElementById("searchBtn").addEventListener("click", async () => {
      const city = document.getElementById("cityInput").value.trim();
      if (!city) return alert("Enter a city!");
      const { lat, lon, name } = await fetchCityCoordinates(city);
      const data = await fetchAQI(lat, lon, name);
      map.setView([lat, lon], 8);
    });

    generateLeaderboard();
  </script>
</body>
</html>
